{"version":3,"sources":["jobContext/actionType.js","jobContext/JobActions.js","components/assets/AppHeader.js","components/skeletonLoader/JobCardSkeleton.js","CustomHook/useFetch.js","components/assets/FilterInputs.js","components/mobileBreakpoint/FilterInput.js","components/JobContainer.js","CustomHook/useFetchInfo.js","components/innerPage/JobInfo.js","App.js","jobContext/jobReducer.js","jobContext/JobProvider.js","index.js"],"names":["FETCH_JOB","API_REQUEST","API_ERROR","JOB_INFO_REQUEST","JOB_INFO","JOB_INFO_ERROR","TOGGLE_THEME","apiRequest","type","fetchJob","data","payload","apiError","error","getJobInfoRequest","getJobInfo","id","newData","find","job","getJobInfoError","AppHeader","themeState","useSelector","state","theme","dispatch","useDispatch","className","Switch","onChange","darkOrwhite","toggle","color","inputProps","JobCardSkeleton","index","circle","height","width","duration","highlightColor","count","useFetch","newUrl","initialState","RequestAction","fetchAction","errorAction","useState","setData","useEffect","axios","method","url","then","res","catch","FilterInputs","desc","setDesc","location","setlocation","jobType","setJobtype","onSubmit","e","preventDefault","placeholder","value","target","Button","variant","elementTheme","JobContainer","loading","Array","fill","map","jobData","to","style","src","company_logo","alt","title","created_at","company","useFetchInfo","JobInfo","jobInfoState","jobInfo","console","log","useParams","description","how_to_apply","Backdrop","open","CircularProgress","size","href","source","escapeHtml","App","changeTheme","backgroundColor","exact","path","ReduxThunk","require","default","rootJobReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8197a197.chunk.js","sourcesContent":["export  const FETCH_JOB = 'FETCH_JOB';\r\nexport  const API_REQUEST = 'API_REQUEST';\r\nexport  const API_ERROR = 'API_ERROR';\r\n\r\nexport const JOB_INFO_REQUEST = 'JOB_INFO_REQUEST';\r\nexport const JOB_INFO = 'JOB_INFO';\r\nexport const JOB_INFO_ERROR = 'JOB_INFO_ERROR';\r\n\r\nexport const  TOGGLE_THEME = 'TOGGLE_THEME';\r\n","\r\nimport {\r\n  API_REQUEST,\r\n  FETCH_JOB,\r\n  API_ERROR,\r\n  JOB_INFO_REQUEST,\r\n  JOB_INFO,\r\n  JOB_INFO_ERROR,\r\n  TOGGLE_THEME\r\n  } from './actionType';\r\n\r\nexport const apiRequest = () => {\r\n   return {\r\n     type : API_REQUEST,\r\n   }\r\n}\r\n\r\nexport const fetchJob = (data) => {\r\n\r\n   return {\r\n     type : FETCH_JOB,\r\n     payload : data\r\n   }\r\n}\r\n\r\nexport const apiError = (error) => {\r\n   return {\r\n     type : API_ERROR,\r\n     payload : error\r\n   }\r\n}\r\n\r\n\r\n// job informatioin actionType\r\n\r\nexport const getJobInfoRequest = (data) => {\r\n  return {\r\n    type : JOB_INFO_REQUEST\r\n  }\r\n}\r\n\r\nexport const getJobInfo = (data , id) => {\r\n  const newData =  data.find(job => {\r\n    return job.id === id\r\n  });\r\n  return {\r\n    type : JOB_INFO,\r\n    payload : newData\r\n  }\r\n}\r\n\r\nexport const getJobInfoError = (error) => {\r\n  return {\r\n    type : JOB_INFO_ERROR,\r\n    payload : error\r\n  }\r\n}\r\n\r\n\r\n// toggle themeaction\r\nexport const toggleTheme = (darkOrwhite) => {\r\n  return {\r\n    type : TOGGLE_THEME,\r\n    payload : darkOrwhite\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\r\nimport {toggleTheme} from '../../jobContext/JobActions';\r\nimport {useSelector , useDispatch} from 'react-redux';\r\n\r\nfunction AppHeader() {\r\n   const themeState = useSelector(state => state.theme);\r\n  const dispatch = useDispatch();\r\n\r\n function setTheme() {\r\n   dispatch(toggleTheme(!themeState.toggle));\r\n }\r\n\r\n   return (\r\n    <div className=\"app-header\">\r\n      <div className=\"container d-flex justify-content-between align-items-center pt-3\">\r\n         <h3 className=\" text-white\">devjobs</h3>\r\n         <div className=\"theme-toggle d-flex align-items-center\">\r\n            \r\n           <WbSunnyIcon className=\"text-warning\" />\r\n             <Switch\r\n               onChange={setTheme}\r\n               color=\"default\"\r\n               inputProps={{ 'aria-label': 'checkbox with default color' }}\r\n              />\r\n            <Brightness3Icon className=\"text-white\"/>\r\n         </div>\r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\nfunction JobCardSkeleton(index) {\r\n   return (\r\n     <>\r\n          <div className=\"col-sm-4\" key={index}>\r\n              <div className=\" job-card-loader p-4 mb-5\">\r\n                    <div className=\"company-logo mb-3\">\r\n                       <Skeleton circle={true} height={50} width={50} duration={2}/>\r\n                    </div>\r\n                   <div className=\"company-info mt-2\">\r\n                    <SkeletonTheme color=\"#f4f4f2\" highlightColor=\"whitesmoke\">\r\n                       <h5 className=\"company-title\">\r\n                          <Skeleton width={300} />\r\n                       </h5>\r\n                    </SkeletonTheme>\r\n                     <SkeletonTheme color=\"#f4f4f2\" highlightColor=\"whitesmoke\">\r\n                        <p>\r\n                          <Skeleton count={5} width={300} height={10} />\r\n                        </p>\r\n                    </SkeletonTheme>\r\n                   </div>\r\n              </div>\r\n          </div>\r\n     </>\r\n   )\r\n}\r\n\r\nexport default JobCardSkeleton;\r\n","import React , {useState , useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch} from 'react-redux';\r\n\r\nfunction useFetch(newUrl , initialState, RequestAction , fetchAction , errorAction ) {\r\n   const dispatch = useDispatch();\r\n   const [data , setData] = useState(initialState);\r\n\r\n   useEffect(() => {\r\n     dispatch(RequestAction());\r\n     axios({\r\n       method : 'GET',\r\n       url : newUrl\r\n       })\r\n       .then(res => {\r\n         const data = res.data;\r\n         setData(data);\r\n         dispatch(fetchAction(data))\r\n       }).catch(error => {\r\n         dispatch(errorAction(error))\r\n       })\r\n   },[newUrl]);\r\n\r\n   return data;\r\n}\r\n\r\nexport default useFetch;\r\n","import React,{useState} from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport Button from '@material-ui/core/Button';\r\nimport useFetch from '../../CustomHook/useFetch';\r\nimport axios from 'axios';\r\nimport {apiRequest , fetchJob , apiError } from '../../jobContext/index';\r\nimport { useDispatch} from 'react-redux';\r\n\r\nfunction FilterInputs() {\r\n const [desc , setDesc] = useState('');\r\n const [location  , setlocation] = useState('');\r\n const [jobType , setJobtype] = useState('');\r\n const dispatch = useDispatch();\r\n\r\n\r\n const handleSubmit = (e) => {\r\n   e.preventDefault();\r\n   dispatch(apiRequest());\r\n  axios({\r\n    method : 'GET',\r\n    url : `https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=${desc}&location=${location}&full_time=${jobType}`,\r\n\r\n    })\r\n    .then(res => {\r\n      dispatch(fetchJob(res.data));\r\n\r\n    }).catch(error => {\r\n      dispatch(apiError(error));\r\n    })\r\n    setDesc('');\r\n    setlocation('');\r\n    setJobtype('');\r\n }\r\n\r\n  return (\r\n    <div className=\"filterInputs d-none d-lg-block d-md-block\">\r\n     <form onSubmit={handleSubmit}>\r\n        <div className=\"container card filterCard shadow-sm\">\r\n         <div className=\"row\">\r\n           <div className=\"col-sm-4 border-right d-flex align-items-center\">\r\n             <SearchIcon className=\"icons\"/>\r\n             <input type=\"text\" className=\"searchInput\" placeholder=\"Filter By title , componies , experties...\" value={desc} onChange={(e) => setDesc(e.target.value)}/>\r\n           </div>\r\n           <div className=\"col-sm-4 border-right d-flex align-items-center\">\r\n             <LocationOnIcon className=\"icons\"/>\r\n             <input type=\"text\" className=\"searchInput\" placeholder=\"Filter By location...\" value={location} onChange={(e) => setlocation(e.target.value)}/>\r\n           </div>\r\n           <div className=\"col-sm-4 d-flex align-items-center justify-content-around w-50\">\r\n             <input type=\"checkbox\" className=\"checkBox\" onChange={() => setJobtype(true)}/>\r\n             <span className=\"icons font-pop\">Full time only</span>\r\n             <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"btn btn-primary\">Search</Button>\r\n           </div>\r\n         </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterInputs;\r\n","import React,{useState} from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport Button from '@material-ui/core/Button';\r\nimport useFetch from '../../CustomHook/useFetch';\r\nimport axios from 'axios';\r\nimport {apiRequest , fetchJob , apiError } from '../../jobContext/index';\r\nimport { useDispatch} from 'react-redux';\r\n\r\nfunction FilterInputs({elementTheme}) {\r\n const [desc , setDesc] = useState('');\r\n const [location  , setlocation] = useState('');\r\n const [jobType , setJobtype] = useState('');\r\n const dispatch = useDispatch();\r\n\r\n\r\n const handleSubmit = (e) => {\r\n   e.preventDefault();\r\n   dispatch(apiRequest());\r\n  axios({\r\n    method : 'GET',\r\n    url : `https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=${desc}`,\r\n\r\n    })\r\n    .then(res => {\r\n      dispatch(fetchJob(res.data));\r\n\r\n    }).catch(error => {\r\n      dispatch(apiError(error));\r\n    })\r\n    setDesc('');\r\n    setlocation('');\r\n    setJobtype('');\r\n }\r\n\r\n  return (\r\n    <div className=\"filterInputs d-block d-sm-block d-md-none\" >\r\n     <form onSubmit={handleSubmit}>\r\n        <div className=\"container card filterCard shadow-sm\">\r\n         <div className=\"row\">\r\n           <div className=\"col-8  d-flex align-items-center\">\r\n             <SearchIcon className=\"icons\"/>\r\n             <input type=\"text\" className=\"searchInput\" placeholder=\"search By title...\" value={desc} onChange={(e) => setDesc(e.target.value)}/>\r\n           </div>\r\n           <div className=\"col-2 d-flex align-items-center justify-content-center w-100 pl-4\">\r\n             <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"btn btn-primary ml-3\"><SearchIcon className=\"text-white\"/></Button>\r\n           </div>\r\n         </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterInputs;\r\n","import React, { useEffect } from 'react';\r\nimport {apiRequest , fetchJob , apiError  } from '../jobContext/index';\r\nimport {useSelector } from 'react-redux';\r\nimport JobCardSkeleton from './skeletonLoader/JobCardSkeleton';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport FilterInputs from './assets/FilterInputs';\r\nimport MobileFilterInput from './mobileBreakpoint/FilterInput';\r\nimport {Link } from 'react-router-dom';\r\nimport useFetch from '../CustomHook/useFetch';\r\n\r\nfunction JobContainer({elementTheme}) {\r\n  const initialState = useSelector(state => state.job);\r\n  const newUrl = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\r\n  const fetchJobData = useFetch(newUrl ,[] , apiRequest , fetchJob , apiError);\r\n\r\n  return (\r\n    <>\r\n      <FilterInputs />\r\n      <MobileFilterInput className=\"mb-3\" elementTheme={elementTheme}/>\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        {initialState.loading ? (\r\n          <div className=\"container mt-3\">\r\n           <div className=\"row\">\r\n            {\r\n              Array(50).fill().map(index => (\r\n                  <JobCardSkeleton index={index}/>\r\n              ))\r\n            }\r\n           </div>\r\n         </div>\r\n       ) : (\r\n         <>\r\n         {initialState.jobData.map(job => (\r\n             <div className=\"col-sm-4 mt-3\">\r\n               <Link to={`/job-details/${job.id}`} className=\"text-dark info-link\">\r\n                 <div className=\"job-card p-4 mb-2\"  key={job.id} style={elementTheme}>\r\n                   <div className=\"company-logo mb-2\" >\r\n                     <img src={job.company_logo}  alt=\"company_logo\" width=\"100%\" />\r\n                   </div>\r\n                  <div className=\"company-info mt-3\">\r\n                    <h5 className=\"company-title\">{job.title}</h5>\r\n                    <p className=\"job-created\">{job.created_at}</p>\r\n                    <p className=\"company-name\">{job.company}</p>\r\n                    <p className=\"badge badge-dark\">{job.type}</p>\r\n                   <p className=\"company-loc text-info mt-3\"><LocationOnIcon /> {job.location}</p>\r\n                  </div>\r\n                 </div>\r\n              </Link>\r\n             </div>\r\n         ))}\r\n\r\n         </>\r\n       )}\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default JobContainer;\r\n","import React , {useState , useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch} from 'react-redux';\r\n\r\nfunction useFetchInfo(newUrl , id , initialState, RequestAction , fetchAction , errorAction ) {\r\n   const dispatch = useDispatch();\r\n   const [data , setData] = useState(initialState);\r\n\r\n   useEffect(() => {\r\n     dispatch(RequestAction());\r\n     axios({\r\n       method : 'GET',\r\n       url : newUrl\r\n       })\r\n       .then(res => {\r\n         const data = res.data;\r\n         setData(data);\r\n         dispatch(fetchAction(data , id))\r\n       }).catch(error => {\r\n         dispatch(errorAction(error))\r\n       })\r\n   },[newUrl]);\r\n\r\n   return data;\r\n}\r\n\r\nexport default useFetchInfo;\r\n","import React ,{useState} from 'react';\r\nimport AppHeader from '../assets/AppHeader';\r\nimport useFetchInfo from '../../CustomHook/useFetchInfo';\r\nimport {getJobInfoRequest, getJobInfo , getJobInfoError} from '../../jobContext/JobActions';\r\nimport {useSelector} from 'react-redux';\r\nimport {useParams} from 'react-router-dom';\r\nimport {Button } from '@material-ui/core';\r\nimport ReactMarkdown from  'react-markdown';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nfunction JobInfo({elementTheme}) {\r\n  const jobInfoState = useSelector(state => state.jobInfo);\r\n  const newUrl = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\r\n console.log(jobInfoState);\r\n  //   destructure with  location\r\n  const {id} = useParams();\r\n\r\n  //  fetchhing data using custom hook (useFetch)\r\n  const fetchJobinfo = useFetchInfo(newUrl , id, [] , getJobInfoRequest, getJobInfo , getJobInfoError );\r\n\r\n // destructure jobinfo\r\n const {company_logo , title, company ,created_at, url , type , location , description , how_to_apply} = jobInfoState.jobData;\r\n   return (\r\n     <div className=\"App\">\r\n      {!jobInfoState.loading && (<AppHeader />)}\r\n    {jobInfoState.loading ? (\r\n      <>\r\n      <Backdrop  open={jobInfoState.loading} >\r\n          <CircularProgress color=\"primary\" />\r\n      </Backdrop>\r\n      </>\r\n    ) : (\r\n       <>\r\n       <div className=\"job-info container\">\r\n\r\n            <div className=\"job-card-header card p-1\" style={elementTheme}>\r\n               <div className=\"row mt-3 py-3 header-content \">\r\n                   <div className=\"col-sm-2 border-right\">\r\n                       <img src={company_logo} className=\"ml-4 rounded img-responsive company-logo mt-2\"  alt=\"company_logo\" width=\"100px\" />\r\n                   </div>\r\n                   <div className=\"col-sm-7 pl-4 pt-4 text-md-center\">\r\n                        <h4 className=\"company-title\">{title}</h4>\r\n                        <p className=\"company-name\">{company}</p>\r\n                    </div>\r\n                      <div className=\"col-sm-3 pt-4\">\r\n                        <Button  variant=\"outlined\" className=\"company_link\" size=\"large\" color=\"primary\"><a href={url} className=\"info-link\">company site</a></Button>\r\n                     </div>\r\n               </div>\r\n            </div>\r\n            <div className=\"row  info-card\" style={elementTheme}>\r\n              <div className=\"col-sm-12\">\r\n                 <header className=\"d-flex justify-content-between p-3 align-items-center \">\r\n                    <div className=\"info-header\">\r\n                        <span className=\"job-created\">{created_at}</span>\r\n                        <span className=\"badge badge-dark ml-3\">{type}</span>\r\n                        <h4 className=\"company-title\">{title}</h4>\r\n                        <p className=\"company-loc text-info\">{location}</p>\r\n                    </div>\r\n                    <div className=\"apply_btn\">\r\n                       <Button type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\" className=\"btn btn-primary\">Apply</Button>\r\n                    </div>\r\n                 </header>\r\n                 <section className=\"job-desc p-3\">\r\n                    <ReactMarkdown source={description} escapeHtml={false}/>\r\n                 </section>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-2 apply-card  p-3 rounded\" style={elementTheme}>\r\n                <ReactMarkdown source={how_to_apply} escapeHtml={false}/>\r\n            </div>\r\n       </div>\r\n       </>\r\n    )}\r\n     </div>\r\n   );\r\n}\r\nexport default JobInfo;\r\n","import AppHeader from './components/assets/AppHeader';\nimport JobContainer from './components/JobContainer';\nimport {BrowserRouter as Router , Route} from 'react-router-dom';\nimport JobInfo from './components/innerPage/JobInfo';\nimport './App.css';\nimport {useSelector } from 'react-redux';\n\nfunction App() {\n  const themeState = useSelector(state => state.theme);\n  console.log(themeState);\n  const changeTheme = {\n      backgroundColor : themeState.toggle ? \"#000\" : \"#f1f6f9\",\n      color: themeState.toggle ? \"#fff\" : \"#000\"\n  }\n\n  const elementTheme = {\n    backgroundColor : themeState.toggle ? \"#002\" : \"#fff\",\n    color: themeState.toggle ? \"#fff\" : \"#000\"\n  }\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <div className=\"App\" style={changeTheme}>\n          <AppHeader />\n          <JobContainer elementTheme={elementTheme}/>\n        </div>\n      </Route>\n      <Route exact path=\"/job-details/:id\">\n      <div className=\"App\" style={changeTheme}>\n       <JobInfo elementTheme={elementTheme}/>\n      </div>\n      </Route>\n    </Router>\n\n  );\n}\n\nexport default App;\n","\r\nimport {API_REQUEST , FETCH_JOB , API_ERROR , JOB_INFO_REQUEST , JOB_INFO , JOB_INFO_ERROR , TOGGLE_THEME} from './actionType';\r\n\r\n const initialState = {\r\n  loading  : false,\r\n  jobData : [],\r\n  error : ''\r\n}\r\n\r\nconst jobInfoState = {\r\n  loading : false,\r\n  jobData : [],\r\n  error : ''\r\n}\r\n\r\nconst themeState = {\r\n  toggle : false\r\n}\r\n\r\nexport const jobReducer = (state = initialState , action) => {\r\n   switch(action.type) {\r\n     case API_REQUEST : return {\r\n       ...state,\r\n       jobData : [],\r\n       loading : true,\r\n       error : ''\r\n     }\r\n     case FETCH_JOB : return {\r\n       ...state,\r\n       jobData : action.payload,\r\n       loading : false\r\n     }\r\n     case API_ERROR : return {\r\n       ...state,\r\n       loading : false,\r\n       error : action.payload\r\n     }\r\n     default : return state;\r\n   }\r\n}\r\n\r\nexport const jobInfoReducer = (state = initialState , action) => {\r\n   switch(action.type) {\r\n     case JOB_INFO_REQUEST: return {\r\n       ...state,\r\n       jobData : [],\r\n       loading : true,\r\n     }\r\n     case JOB_INFO : return {\r\n       ...state,\r\n       jobData : action.payload,\r\n       loading : false,\r\n     }\r\n     case JOB_INFO_ERROR : return {\r\n       ...state,\r\n       loading : false,\r\n       error : action.payload\r\n     }\r\n     default: return state;\r\n   }\r\n}\r\n\r\nexport const themeReducer = (state = initialState , action) => {\r\n   switch(action.type) {\r\n     case TOGGLE_THEME: return {\r\n       ...state,\r\n       toggle : action.payload,\r\n     }\r\n\r\n     default: return state;\r\n   }\r\n}\r\n","import {createStore , applyMiddleware , combineReducers} from \"redux\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {jobReducer , jobInfoReducer , themeReducer} from './jobReducer';\r\nconst ReduxThunk = require('redux-thunk').default;\r\n\r\nconst rootJobReducer = combineReducers({\r\n   job : jobReducer,\r\n   jobInfo : jobInfoReducer,\r\n   theme : themeReducer\r\n})\r\n\r\n const store = createStore(rootJobReducer , composeWithDevTools(applyMiddleware(ReduxThunk)));\r\n\r\n export default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider} from 'react-redux';\nimport store from './jobContext/JobProvider';\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}